{"version":3,"sources":["components/ContactsList/ContactsList.module.scss","components/ContactFilter/ContactFilter.module.scss","components/ContactInput/ContactInput.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/ContactFilter/ContactFilter.js","App.js","index.js","components/ContactItem/ContactItem.module.scss","styles/base.module.scss"],"names":["module","exports","ContactInput","onSubmit","useState","name","setName","number","setNumber","nameInputId","ShortId","generate","numberInputId","state","handelChange","e","target","value","preventDefault","id","type","pattern","title","required","onChange","ContactItem","onDeleteContact","className","s","contactItem","contact_name","contact_number","onClick","contact_btn","ContactsList","contacts","contact_list","map","contact","Filter","filter_label","App","JSON","parse","window","localStorage","getItem","findStorageContacts","setContacts","filter","setFilter","useEffect","setItem","stringify","filteredNumbers","normalizedFilter","toLowerCase","includes","contactFilter","main_container","console","log","newContact","find","alert","prevContacts","length","contactId","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.e9f76200.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactsList_root__3JK38\",\"main_container\":\"ContactsList_main_container__2voMX\",\"title\":\"ContactsList_title__2NNOH\",\"contact_btn\":\"ContactsList_contact_btn__3RJA2\",\"contact_list\":\"ContactsList_contact_list__1jECw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactFilter_root__34DmJ\",\"main_container\":\"ContactFilter_main_container__3UzB2\",\"title\":\"ContactFilter_title__2Fw9N\",\"contact_btn\":\"ContactFilter_contact_btn__Mvofv\",\"filter_label\":\"ContactFilter_filter_label__2BT-G\"};","import { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ShortId from 'shortid';\r\n\r\nfunction ContactInput ({onSubmit}) {\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  \r\n  const nameInputId = ShortId.generate();\r\n  const numberInputId = ShortId.generate();\r\n\r\n  const state = {name, number}\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');    \r\n  };\r\n\r\n    const handelChange = e => {\r\n      const inputName = e.target.name;\r\n      switch (inputName) {\r\n        case 'name':\r\n            setName(e.target.value);\r\n            break;\r\n\r\n        case 'number':\r\n            setNumber(e.target.value);\r\n            break;\r\n\r\n        default:\r\n            break;\r\n\r\n      }}\r\n\r\n \r\n  \r\n  const handelSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    onSubmit(state);\r\n    reset();\r\n  };\r\n\r\n \r\n    return (\r\n      <form onSubmit={handelSubmit}>\r\n        <label id={nameInputId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            id={nameInputId}\r\n            onChange={handelChange}\r\n          />\r\n        </label>\r\n        <label id={numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            id={numberInputId}\r\n            onChange={handelChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n\r\nContactInput.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactInput;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.scss';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\n  <li className={s.contactItem}>\n    <div>\n      <span className={s.contact_name}>{name}</span>\n      <span className={s.contact_number}>{number}</span>\n    </div>\n    <button onClick={() => onDeleteContact(id)} className={s.contact_btn}>\n      X\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem';\nimport s from './ContactsList.module.scss';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contact_list}>\n      {contacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport s from './ContactFilter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <span className={s.filter_label}>Contact filter</span>\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\r\nimport ContactInput from './components/ContactInput';\r\nimport ContactsList from './components/ContactsList/ContactsList';\r\nimport ShortId from 'shortid';\r\nimport Filter from './components/ContactFilter';\r\nimport s from './styles/base.module.scss';\r\n\r\nfunction findStorageContacts () {\r\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? '';\r\n}\r\n\r\nfunction App () {\r\n\r\n  const [contacts, setContacts] = useState(()=>findStorageContacts ());\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect (()=>{\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  },[contacts])\r\n  \r\n  \r\n  const handlerContact = ({ name, number }) => {\r\n    console.log(name)\r\n    console.log(number)\r\n    const newContact = {\r\n      id: ShortId.generate(),\r\n      name: name,\r\n      number: number,\r\n    }\r\n\r\n    if (\r\n        contacts.find(contact => contact.name.toLowerCase() === newContact.name.toLowerCase()) ||\r\n        contacts.find(contact => contact.number === newContact.number)\r\n      ) {\r\n        alert(`${newContact.name} is already in contacts!`);\r\n        return;\r\n      }\r\n\r\n    console.log(newContact)\r\n    setContacts(prevContacts => [...prevContacts, newContact])\r\n    console.log('контакт після сет стейту нового контакту',contacts)\r\n\r\n\r\n\r\n}\r\n\r\n   const deleteContact = contactId => {\r\n      setContacts(\r\n      contacts.filter(contact => contact.id !== contactId)\r\n      );\r\n    };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const contactFilter = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\r\n    return filteredContacts;\r\n  };\r\n\r\n \r\n    const filteredNumbers = contactFilter();\r\n\r\n    return (\r\n      <div className={s.main_container}>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n\r\n        <ContactInput onSubmit={handlerContact} />\r\n\r\n        <h2 className={s.title}>Contacts</h2>\r\n       \r\n\r\n       {contacts.length > 1 && <Filter onChange={changeFilter} value={filter} />} \r\n\r\n        <ContactsList contacts={filteredNumbers} onDeleteContact={deleteContact} />\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactItem_root__1RPq8\",\"main_container\":\"ContactItem_main_container__3EsCs\",\"title\":\"ContactItem_title__KjM0F\",\"contact_btn\":\"ContactItem_contact_btn__1Rsrs\",\"contact\":\"ContactItem_contact__11Red\",\"contact_number\":\"ContactItem_contact_number__1wJFp\",\"contactItem\":\"ContactItem_contactItem__4nPog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"base_root__3y57W\",\"main_container\":\"base_main_container__ls0_y\",\"title\":\"base_title__2kLVP\",\"contact_btn\":\"base_contact_btn__RI7i5\"};"],"sourceRoot":""}